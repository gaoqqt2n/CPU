$date
  Tue Nov 07 11:53:12 2017
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! inst[31:0] $end
$var reg 2 " hactrl[1:0] $end
$var reg 5 # rs[4:0] $end
$var reg 5 $ rt[4:0] $end
$var reg 5 % rd[4:0] $end
$var reg 5 & shamt[4:0] $end
$var reg 6 ' opcode[5:0] $end
$var reg 6 ( funct[5:0] $end
$var reg 16 ) extend16[15:0] $end
$var reg 26 * extend26[25:0] $end
$var reg 2 + flagout[1:0] $end
$var reg 5 , brtout[4:0] $end
$var reg 5 - brdout[4:0] $end
$var reg 6 . bopcdout[5:0] $end
$scope module dut $end
$var reg 32 / inst[31:0] $end
$var reg 2 0 hactrl[1:0] $end
$var reg 5 1 rs[4:0] $end
$var reg 5 2 rt[4:0] $end
$var reg 5 3 rd[4:0] $end
$var reg 5 4 shamt[4:0] $end
$var reg 6 5 opcode[5:0] $end
$var reg 6 6 funct[5:0] $end
$var reg 16 7 extend16[15:0] $end
$var reg 26 8 extend26[25:0] $end
$upscope $end
$enddefinitions $end
#0
b00000000001000100001100000100000 !
b00 "
b00001 #
b00010 $
b00011 %
b00000 &
b000000 '
b100000 (
b0001100000100000 )
b00001000100001100000100000 *
bUU +
bUUUUU ,
bUUUUU -
bUUUUUU .
b00000000001000100001100000100000 /
b00 0
b00001 1
b00010 2
b00011 3
b00000 4
b000000 5
b100000 6
b0001100000100000 7
b00001000100001100000100000 8
#200000000
b00001000000000000000000000100000 !
b01 "
b00000 #
b00000 $
b00000 %
b000010 '
b0000000000100000 )
b00000000000000000000100000 *
b00001000000000000000000000100000 /
b01 0
b00000 1
b00000 2
b00000 3
b000010 5
b0000000000100000 7
b00000000000000000000100000 8
#400000000
b10001100100000110000000000000100 !
b000001 '
b000000 (
b0000000000000000 )
b00000000000000000000000000 *
b10001100100000110000000000000100 /
b000001 5
b000000 6
b0000000000000000 7
b00000000000000000000000000 8
#600000000
b10001100101000110000000000001000 !
b00 "
b10001100101000110000000000001000 /
b00 0
#800000000
b00000000000000000000000000100000 !
b00000000000000000000000000100000 /
#1000000000
b10101100110000110000000000000100 !
b00110 #
b00011 $
b101011 '
b000100 (
b0000000000000100 )
b00110000110000000000000100 *
b10101100110000110000000000000100 /
b00110 1
b00011 2
b101011 5
b000100 6
b0000000000000100 7
b00110000110000000000000100 8
#1200000000
b00000000001001010011000000100000 !
b00001 #
b00101 $
b00110 %
b000000 '
b100000 (
b0011000000100000 )
b00001001010011000000100000 *
b00000000001001010011000000100000 /
b00001 1
b00101 2
b00110 3
b000000 5
b100000 6
b0011000000100000 7
b00001001010011000000100000 8
#1400000000
b10001100111000110000000000001100 !
b00111 #
b00011 $
b00000 %
b100011 '
b001100 (
b0000000000001100 )
b00111000110000000000001100 *
b10001100111000110000000000001100 /
b00111 1
b00011 2
b00000 3
b100011 5
b001100 6
b0000000000001100 7
b00111000110000000000001100 8
#1600000000
b00000000011001000010100000100000 !
b10 "
b00000 #
b00000 $
b000001 '
b000000 (
b0000000000000000 )
b00000000000000000000000000 *
b00000000011001000010100000100000 /
b10 0
b00000 1
b00000 2
b000001 5
b000000 6
b0000000000000000 7
b00000000000000000000000000 8
#1800000000
b10101100100001110000000000001000 !
b00 "
b10101100100001110000000000001000 /
b00 0
#2000000000
b00000000000000000000000000100000 !
b00000000000000000000000000100000 /
#2200000000
